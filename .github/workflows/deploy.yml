name: Deploy to VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/crm-demo-key
          chmod 600 ~/.ssh/crm-demo-key
          echo "Host 104.154.114.203
            IdentityFile ~/.ssh/crm-demo-key
            User akash_contextqa_com
            StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Cleanup VM Docker resources
        run: |
          echo "🧹 Cleaning up Docker resources on VM..."
          ssh 104.154.114.203 "
            docker system prune -af &&
            docker volume prune -f
          "

      - name: Setup SSL certificates on VM
        run: |
          echo "🔐 Setting up SSL certificates on VM..."
          ssh 104.154.114.203 "
            # Create SSL directory
            mkdir -p ~/ssl
            
            # Generate self-signed certificate for development
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -keyout ~/ssl/key.pem \
              -out ~/ssl/cert.pem \
              -subj '/C=US/ST=State/L=City/O=Idurar/CN=104.154.114.203'
            
            # Set proper permissions
            chmod 600 ~/ssl/key.pem
            chmod 644 ~/ssl/cert.pem
            
            echo '✅ SSL certificates generated successfully!'
          "

      - name: Deploy to VM
        run: |
          echo "📥 Copying latest code to VM..."
          ssh 104.154.114.203 "if [ -d ~/idurar-erp-crm ]; then rm -rf ~/idurar-erp-crm; fi"
          scp -r ./ 104.154.114.203:~/idurar-erp-crm

          echo "🚀 Deploying with docker-compose on VM..."
          ssh 104.154.114.203 "
            cd ~/idurar-erp-crm &&
            
            # Copy SSL certificates to project directory
            cp ~/ssl/cert.pem ~/idurar-erp-crm/ssl/cert.pem
            cp ~/ssl/key.pem ~/idurar-erp-crm/ssl/key.pem
            
            # Stop existing containers
            docker-compose -f ~/idurar-erp-crm/docker-compose.yml down &&
            
            # Build and start with HTTPS support
            docker-compose -f ~/idurar-erp-crm/docker-compose.yml build --no-cache &&
            docker-compose -f ~/idurar-erp-crm/docker-compose.yml up -d &&
            
            echo '✅ Deployment completed with HTTPS support!'
            echo '🌐 Application available at:'
            echo '   HTTP:  http://104.154.114.203'
            echo '   HTTPS: https://104.154.114.203'
          "
